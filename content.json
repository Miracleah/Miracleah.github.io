{"meta":{"title":"Miracle","subtitle":"把真诚和热爱趁年轻全部浪费掉","description":"这是我的博客测试描述，看看它会出现在哪个地方","author":"Miracle","url":"http://example.com","root":"/"},"pages":[],"posts":[{"title":"","slug":"c语言笔记（1）","date":"2021-10-26T11:32:38.636Z","updated":"2021-10-26T11:32:16.181Z","comments":true,"path":"2021/10/26/c语言笔记（1）/","link":"","permalink":"http://example.com/2021/10/26/c%E8%AF%AD%E8%A8%80%E7%AC%94%E8%AE%B0%EF%BC%881%EF%BC%89/","excerpt":"title:c语言笔记（1）cover：https://i.postimg.cc/pdgZyrZd/11386050-4e6392f33f75e84d.png 初识c语言，东西比较杂乱，所以写来整理，以便后续复习。","text":"title:c语言笔记（1）cover：https://i.postimg.cc/pdgZyrZd/11386050-4e6392f33f75e84d.png 初识c语言，东西比较杂乱，所以写来整理，以便后续复习。 1，先看最近遇到的一个问题：写一个函数，它的功能是使a,b两个变量的值交换。 函数的写法如下： 1234567void swap1(int x, int y)//函数定义&#123; int z=0;//引入一个中间变量 z=x; x=y; y=z;&#125; 然后在主函数使用它： 123456789include&lt;stdio.h&gt;int main()&#123; int a=20; int b=10; swap1(a,b);//函数调用 printf(&quot;%d %d&quot;,a,b); return 0;&#125; 编译运行后发现：a=20,b=10.也就是说a和b的值并没有交换，写的交换函数出问题了。但回过头来看一看，函数写的好像确实“一点问题都没有”，于是，我们调试这个代码，并监视a，b，x，y的值，发现：当a和b把值传给x，y的时候，x=a=20；y=b=10; 经过函数的作用：x=b=10 ; y=a=20; 终于，明白了问题所在：其实，这个程序交换的是x和y的值，并没有对a和b的值进行交换，但这并不是我们想要的；进一步监视&amp;a，&amp;b发现了这个问题的本质：当a和b把值传给x和y时，x和y在内存中分别开辟了一个空间，这个空间的地址不同于a和b，也就是说我们无论进行什么操作，都是对x和y操作的，并不会对a和b的值产生什么影响。于是我们对这个程序进行改进，使函数内部是对a和b进行操作的。改进后的函数如下： 1234567void swap2(int* pa, int* pb)//这里的pa和pb是指针变量，用来接收a和b的地址//函数定义&#123; int z=0;//引入一个中间变量 z=*pa; *pa=*pb; *pb=z;&#125; 再把主函数内的swap(a,b)改为swap(&amp;a,&amp;b),这样就把a和b的地址传给swap函数，用指针变量去接收地址，就可以完成值的交换。 其中在函数定义中的x和y，称之为形式参数 (形参)【可以是常量，变量，表达式，函数等】；在函数调用中的a和b称之为实际参数 (实参)【只有在函数被调用的时候才会实例化（分配内存单元）且在函数调用完成之后就自动销毁了，只在函数中有效】 swap1在被调用的时候，实参传给形参，其实形参是实参的一份临时拷贝。所以，改变形参，并不会改变实参。但是swap2中的pa和pb和a，b是对应的。 2，写一个函数，判断它是否为素数 首先，我们要明确如何判断一个数是不是质数，然后再考虑怎么去实现它。 简单的一个思路就是：假设这个数是n，然后n分别除以2——(n-1)(亦或者根号n) 对于依次做除法，可以利用for循环实现，但我们还得考虑，进行完除法操作后，还应该怎么办才能让这个函数发挥作用。 在这里，我用函数的返回值作为信息，以便于在调用时方便使用，即：如果这个数是素数就返回1，否则返回0； 具体函数如下： 123456789101112int prime_judge(int x)&#123; int i=0; for(i=2;i&lt;x;i++) &#123; if(x%i==0) &#123; return 0; &#125; &#125; return 1;&#125; 在程序中调用这个函数： 123456789101112131415#include&lt;stdio.h&gt;int main()&#123; int n=0; scanf(&quot;%d&quot;,&amp;n); if(prime_judge(n)==1)//利用选择语句，结合返回值进行判断 &#123; printf(&quot;%d is a prime.&quot;,n); &#125; else &#123; printf(&quot;%d is not a prime.&quot;,n); &#125; return 0；&#125; 以上是我的一个小总结，有时间还会总结更多的例子。","categories":[],"tags":[]},{"title":"我的第一篇博客","slug":"我的第一篇博客","date":"2021-10-22T11:53:42.721Z","updated":"2021-10-22T12:17:14.988Z","comments":true,"path":"2021/10/22/我的第一篇博客/","link":"","permalink":"http://example.com/2021/10/22/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/","excerpt":"历时将近半个月，我的博客终于上线啦！这是我在这里写下的第一篇文章","text":"历时将近半个月，我的博客终于上线啦！这是我在这里写下的第一篇文章 弄完博客后，我写下这篇文章来总结这次的经历和我两个月的大学生活。 首先是这次搭建博客，着实不易，在网上搜索教程，一步一步照猫画虎，但你还是会遇到各种错误，如果你足够幸运：你遇到的错误大多数人都遇到了，你可以很容易地在网上找到解决这个错误的方法。但，如果你的脸很黑：hhhh，几乎没人和你有同样的错误，或者是别人的解决方案并不适用于你。。。。不幸的是我每次遇到的问题属于脸黑型，在中途有过放弃的念想。每次整累了，快崩了，就放一放。有些问题，自己就没了（我也不知道为啥） 整个过程把“山重水复疑无路，柳暗花明又一村”体现的淋漓尽致。其实越是这种“尴尬”的局面，就越需要心态，有时候它真的可以决定最后的结果。 再说说自己这两个月的大学生活吧，说来惭愧，这两个月过的确实很一般。自己没有想象中的那么充满斗志，状态也只是满足于上课。也许是刚经历了紧绷的高三，现在一有时间就想给自己放假，没有明白自己想要做好什么事。以前高三的时候，下午吃完饭总会把渴望的眼光投向窗外的操场，然后观望一会就继续写题，想着大学时间多了，要多去操场遛一遛。然而，上了大学的实际情况是：这学期的体育打卡一次还没打。。。。。（真尴尬），真正迈进大学的校园，我才发现我正在迷茫的旋涡中挣扎，也许是大多数学生的共同特点，不知道自己将来会面临什么，也不知道自己应该做什么。希望自己能更快的适应大学生活，找到自己真正的热爱。 文字水平较差，我写完读起来，自己也会有尴尬的感觉，嘿嘿嘿……… ——end——","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2021-10-16T14:33:00.973Z","updated":"2021-10-22T09:55:18.175Z","comments":true,"path":"2021/10/16/hello-world/","link":"","permalink":"http://example.com/2021/10/16/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[],"tags":[]}